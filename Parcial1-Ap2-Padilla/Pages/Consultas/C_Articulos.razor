@page "/Consulta"

@using BLL
@using Models

@inject IToastService toast

<h3>Consulta de Articulos</h3>

<div class="card">
    <div class="card-header">
        <div class="form-group">
            <label>Filtro</label>
            <select class="browser-default custom-select" @bind="Filtro">
                <option value="" disabled>Seleccione una opcion</option>
                <option value="0">Todos</option>
                <option value="1">ID</option>
                <option value="2">Descripcion</option>
            </select>
        </div>
        <div class="form-group">
            <label>Criterio</label>
            <input type="text" class="form-control" @bind="Criterio" />
        </div>
        <button type="button" class="btn btn-primary" @onclick="Consultar">Consultar</button>
    </div>

    <div class="card-body">
        <table class="table">
            <tr>
                <th>ID</th>
                <th>Descripcion</th>
                <th>Existencia</th>
                <th>Costo</th>
                <th>Valor de Inventario</th>
            </tr>

            @foreach (var articulo in Lista)
            {
                <tr>
                    <td>@articulo.ProductoId</td>
                    <td>@articulo.Descripcion</td>
                    <td>@articulo.Existencia</td>
                    <td>@articulo.Costo</td>
                    <td>@articulo.ValorInventario</td>
                </tr>
            }
        </table>
    </div>

    <div class="card-footer">
        <div class="form-group">
            <label>Total de Valor de Inventario</label>
            <input type="number" @bind="Total" class="form-control" disabled />
        </div>
    </div>
</div>

@code {
    [Parameter]
    public double ValorInversion { get; set; }

    public double Total { get; set; }
    public string Criterio = string.Empty;
    public int Filtro { get; set; }

    private List<Articulos> Lista = new List<Articulos>();

    public void Consultar()
    {
        var listado = new List<Articulos>();

        if (Criterio.Trim().Length > 0)
        {
            switch (Filtro)
            {
                case 0:
                    listado = ArticulosBLL.GetList(p => true);
                    break;

                case 1:
                    int id = Convert.ToInt32(Criterio);
                    listado = ArticulosBLL.GetList(p => p.ProductoId == id);
                    break;

                case 2:
                    listado = ArticulosBLL.GetList(p => p.Descripcion.Contains(Criterio));
                    break;
            }
        }
        else
        {
            listado = ArticulosBLL.GetList(p => true);
        }

        Lista = null;
        Lista = listado;

        calcularTotal();
    }

    public void calcularTotal()
    {
        Total = 0;

        foreach(var item in Lista)
        {
            Total += item.ValorInventario;
        }
    }
}
