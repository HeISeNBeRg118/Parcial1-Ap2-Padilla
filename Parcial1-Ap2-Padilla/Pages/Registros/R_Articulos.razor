@page "/"
@page "/{ProductoId:int}"

@using BLL
@using Models

@inject IToastService toast

<EditForm Model="Articulo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/>
    <div class="card">
        <div class="card-header">
            <h3>Registro de Articulos</h3>
        </div>

        <div class="card-body">
            <form>
                @*ProductoId*@
                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group">
                            <label>Producto ID</label>
                            <div class="input-group">
                                <InputNumber @bind-Value="Articulo.ProductoId" class="form-control col-4"/>
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @*Descripcion*@
                <div class="form-group">
                    <label>Descripción</label>
                    <InputText @bind-Value="Articulo.Descripcion" class="form-control" />
                    <ValidationMessage For="@(() => Articulo.Descripcion)" />
                </div>

                @*Existencia*@
                <div class="form-group">
                    <label>Existencia</label>
                    <InputNumber @bind-Value="Articulo.Existencia" class="form-control" @onfocusout="calcularValorInventario"/>
                    <ValidationMessage For="@(() => Articulo.Existencia)" />
                </div>

                @*Costo*@
                <div class="form-group">
                    <label>Costo</label>
                    <InputNumber @bind-Value="Articulo.Costo" class="form-control" @onfocusout="calcularValorInventario"/>
                    <ValidationMessage For="@(() => Articulo.Costo)" />
                </div>

                @*Valor de Inventario*@
                <div class="form-group">
                    <label>Valor de Inventario</label>
                    <InputNumber @bind-Value="Articulo.ValorInventario" class="form-control" disabled/>
                    <ValidationMessage For="@(() => Articulo.ValorInventario)" />
                </div>
            </form>
        </div>

        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int ProductoId { get; set; }

    private Articulos Articulo = new Articulos();

    protected override void OnInitialized()
    {
        Nuevo();
        Buscar();
    }

    public void Nuevo()
    {
        Articulo = new Articulos();
    }

    public void Guardar()
    {
        bool guardo;

        guardo = ArticulosBLL.Guardar(Articulo);

        if (guardo)
        {
            Nuevo();
            toast.ShowSuccess("Guardado correctamente");
        }
        else
            toast.ShowError("No fue posible guardar");
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = ArticulosBLL.Eliminar(Articulo.ProductoId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");
    }

    public void Buscar()
    {
        if(Articulo.ProductoId > 0)
        {
            var encontrado = ArticulosBLL.Buscar(Articulo.ProductoId);

            if (encontrado != null)
                this.Articulo = encontrado;
            else
                toast.ShowWarning("No encontrado");
        }
    }

    private void calcularValorInventario()
    {
        if(Articulo.Costo == 0 || Articulo.Existencia == 0)
        {
            Articulo.ValorInventario = 0;
        }
        else
        {
            Articulo.ValorInventario = Articulo.Existencia * Articulo.Costo;
        }
    }
}
